{
  "Parameters": {
    "LambdaS3Bucket": {
      "Default": "",
      "Type": "String",
      "Description": "The S3 bucket where nlb-lambda-py3.zip is stored"
    },
    "LambdaS3Key": {
      "Default": "",
      "Type": "String",
      "Description": "The S3 key where nlb-lambda-py3.zip is stored"
    },
    "LambdaLayerS3Key": {
      "Default": "",
      "Type": "String",
      "Description": "The S3 key awscli-lambda-layer.zip is stored"
    },
    "InternalALBDNSName": {
      "Default": "", 
      "Type": "String", 
      "Description": "Enter the DNS name of your internal Application Load Balancer name. e.g.application-load-balancer.elb.us-east-1.amazonaws.com"
    }, 
    "InvocationBeforeDeregistration": {
      "Default": 3, 
      "Type": "Number", 
      "Description": "Please specify how many invocations are needed before a IP is deregistered"
    }, 
    "CWMetricFlagIPCount": {
      "Default": "True", 
      "Type": "String", 
      "Description": "Please specify if you want the Lambda function to create a CloudWatch metric to track IP count of your internal Application Load Balancer", 
      "AllowedValues": [
        "True", 
        "False"
      ]
    }, 
    "NLBTargetGroupARN": {
      "Default": "", 
      "Type": "String", 
      "Description": "Enter the target group ARN which you want the Application Load Balancer to be registered to"
    }, 
    "ALBListenerPort": {
      "Default": "", 
      "Type": "String", 
      "Description": "Enter the traffic listener port of your internal Application Load Balancer"
    }, 
    "S3BucketName": {
      "Default": "", 
      "Type": "String", 
      "Description": "Enter the S3 Bucket name that you want to store Application Load Balancer's node IP addresses"
    }, 
    "MAXDNSLookupPerInvocation": {
      "Default": 50, 
      "Type": "Number", 
      "Description": "Please specify the max DNS lookup this function can perform per invocation"
    }
  }, 
  "AWSTemplateFormatVersion": "2010-09-09", 
  "Resources": {
    "LambdaAWSCLILayer": {
      "Type" : "AWS::Lambda::LayerVersion",
      "Properties" : {
          "CompatibleRuntimes" : [ "python3.7" ],
          "Content": {
            "S3Bucket": { "Ref": "LambdaS3Bucket" },
            "S3Key": { "Ref": "LambdaLayerS3Key" }
          },
          "Description" : "Provides AWSCLI to the local lambda worker",
          "LayerName" : "python37-awscli",
          "LicenseInfo" : "N/A"
        }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:InvokeFunction", 
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction", 
            "Arn"
          ]
        }, 
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduledRule", 
            "Arn"
          ]
        }, 
        "Principal": "events.amazonaws.com"
      }
    }, 
    "LambdaIAMRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "Path": "/", 
        "Policies": [
          {
            "PolicyName": "Lambda-ALBasTarget", 
            "PolicyDocument": {
              "Version": "2012-10-17", 
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup", 
                    "logs:CreateLogStream", 
                    "logs:PutLogEvents"
                  ], 
                  "Resource": [
                    "arn:aws:logs:*:*:*"
                  ], 
                  "Effect": "Allow", 
                  "Sid": "LambdaLogging"
                }, 
                {
                  "Action": [
                    "s3:Get*", 
                    "s3:PutObject", 
                    "s3:CreateBucket", 
                    "s3:ListBucket", 
                    "s3:ListAllMyBuckets"
                  ], 
                  "Resource": "*", 
                  "Effect": "Allow", 
                  "Sid": "S3"
                }, 
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces"
                  ], 
                  "Resource": "*", 
                  "Effect": "Allow", 
                  "Sid": "EC2"
                }, 
                {
                  "Action": [
                    "elasticloadbalancing:Describe*", 
                    "elasticloadbalancing:RegisterTargets", 
                    "elasticloadbalancing:DeregisterTargets"
                  ], 
                  "Resource": "*", 
                  "Effect": "Allow", 
                  "Sid": "ELB"
                }, 
                {
                  "Action": [
                    "cloudwatch:putMetricData"
                  ], 
                  "Resource": "*", 
                  "Effect": "Allow", 
                  "Sid": "CW"
                }
              ]
            }
          }
        ], 
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": "sts:AssumeRole", 
              "Effect": "Allow", 
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        }
      }
    }, 
    "ScheduledRule": {
      "Type": "AWS::Events::Rule", 
      "Properties": {
        "State": "ENABLED", 
        "ScheduleExpression": "rate(1 minute)", 
        "Description": "ScheduledRule", 
        "Targets": [
          {
            "Id": "TargetFunctionV1", 
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunction", 
                "Arn"
              ]
            }
          }
        ]
      } 
    }, 
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaS3Bucket"
          }, 
          "S3Key": {
            "Ref": "LambdaS3Key"
          }
        }, 
        "Description": "Register Application Load Balancer to Network Load Balancer", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ], 
        "Environment": {
          "Variables": {
            "NLB_TG_ARN": {
              "Ref": "NLBTargetGroupARN"
            }, 
            "CW_METRIC_FLAG_IP_COUNT": {
              "Ref": "CWMetricFlagIPCount"
            }, 
            "INVOCATIONS_BEFORE_DEREGISTRATION": {
              "Ref": "InvocationBeforeDeregistration"
            }, 
            "S3_BUCKET": {
              "Ref": "S3BucketName"
            }, 
            "ALB_DNS_NAME": {
              "Ref": "InternalALBDNSName"
            }, 
            "ALB_LISTENER": {
              "Ref": "ALBListenerPort"
            }, 
            "MAX_LOOKUP_PER_INVOCATION": {
              "Ref": "MAXDNSLookupPerInvocation"
            }
          }
        }, 
        "Handler": "populate_NLB_TG_with_ALB.lambda_handler", 
        "Role": {
          "Fn::GetAtt": [
            "LambdaIAMRole", 
            "Arn"
          ]
        }, 
        "Timeout": 300, 
        "MemorySize": 512,
        "Runtime": "python3.7",
        "Layers": [ { "Ref": "LambdaAWSCLILayer" } ]
      }
    }
  }, 
  "Description": "Template of Register Application Load Balancer as IP target for Network Load Balancer"
}